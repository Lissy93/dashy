# Builds a Docker image from with latest tag when master branch is updated
# The publishes it to GitHub container registry as a package
name: üèóÔ∏è Build + Publish Docker Image to GHCR
on:
  workflow_dispatch:
  push: 
    branches: ['master']
    tags: [v*]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: dashy
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    permissions:
      contents: read
      packages: write
    steps:
        # Fetch the code
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: echo ::set-output name=version::${GITHUB_REF##*/}

      # Use QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

#       # Use  Moby BuildKit
#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           install: true
#           version: latest
#           driver-opts: image=moby/buildkit:master

        # Login into GH container registry
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # Build the image from default Dockerfile
      - name: Build image
        run: docker build . --file docker/Dockerfile-multi-arch --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

        # Push build image
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
   
